from tkinter import *
from tkinter import ttk,Canvas
from pathlib import Path
from cerub.controles.controlar import Control
import plotly.express as px
import json
import pandas as pd
#from PIL import Image,ImageTk



from matplotlib.backends.backend_tkagg import FigureCanvasTkAgg
from matplotlib.figure import Figure

class Estadistica():
    def __init__(self):
        return None
    
    def guiestadistica(self):
        # pantalla base
        etop = Tk()
        etop.title("CENTRO DE INFUSÃO DE UBERLÂNDIA")
        etop.geometry("450x100")  # set starting size of window
        etop.maxsize(1366, 768)  # width x height

        frame1 = ttk.Frame(etop, padding="6 6 6 6")
        frame1.grid(column=0, row=0)
        ttk.Button(frame1,  text='Analize de medicos', command =self.analisadatos).grid(row=1, column=0, ipadx=2, ipady=2)
        ttk.Button(frame1,  text='Analize por idade', command =self.analyze_age).grid(row=1, column=2 ,ipadx=2, ipady=2)
        ttk.Button(frame1,  text='Salir', command = etop.destroy).grid(row=2, column=0, ipadx=2, ipady=2)
        #
        # canvas = Canvas(frame1)
        # canvas.grid(row=3, column=0, ipadx=2, ipady=2)
        #
        # self.my_image = ImageTk.PhotoImage(Image.open("../../descarga.jpg"))
        # canvas.create_image(10, 10, anchor=NW, image=self.my_image)

        # bucle de la aplicación
        etop.mainloop()

    def analyze_age(self):
        controle = Control()
        visitas = controle.leerdatabase()
        patients_info = []
        for patient_dict in visitas:
            for key, value in patient_dict.items():
                patient_info = {
                    'id': key,
                    'name': value.get('name', ''),
                    'doctor': value.get('doctor', ''),
                    'weight': value.get('weight', ''),
                    'birthday': value.get('birthday', ''),
                    'age': value.get('age', '')
                }
                patients_info.append(patient_info)

        df = pd.DataFrame(patients_info)
        doctor_age = df.groupby('doctor')['age'].apply(list).reset_index()
        df2 = df.explode('age')

        fig = px.box(df, x="doctor", y="age", title="Boxplot of Age by Doctor")
        fig.show()






    def analisadatos(self):
        controle = Control()
        visitas = controle.leerdatabase()
        patients_info = []
        for patient_dict in visitas:
            for key, value in patient_dict.items():
                patient_info = {
                    'id': key,
                    'name': value.get('name', ''),
                    'doctor': value.get('doctor', ''),
                    'weight': value.get('weight', ''),
                    'birthday': value.get('birthday', ''),
                    'age': value.get('age', '')
                }
                patients_info.append(patient_info)

        df = pd.DataFrame(patients_info)
        # print(df.head())

        # Contando a frequência de cada médico
        freq_medicos = df['doctor'].value_counts()

        # print(freq_medicos)
        # Convertendo o objeto Series para um DataFrame
        df_freq_medicos = freq_medicos.reset_index()
        df_freq_medicos.columns = ['Médico', 'Frequência']

        # Plotando o gráfico com plotly
        fig = px.bar(df_freq_medicos, x='Médico', y='Frequência', title="Frequência de cada Médico")
        fig.show()

        

        
        
if __name__ == '__main__':
    menu = Estadistica()
    menu.guiestadistica()
        
        
        
        

        
        
        
        